/* ###################################################################
**     Filename    : ProcessorExpert.c
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2022-11-04, 14:10, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file ProcessorExpert.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup ProcessorExpert_module ProcessorExpert module documentation
**  @{
*/         
/* MODULE ProcessorExpert */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "FRTOS1.h"
#include "MCUC1.h"
#include "UTIL1.h"
#include "UTIL2.h"
#include "cc.h"
#include "BitsIoLdd1.h"
#include "ca.h"
#include "BitsIoLdd2.h"
#include "ledcc.h"
#include "BitsIoLdd3.h"
#include "ledca.h"
#include "BitsIoLdd4.h"
#include "CsIO1.h"
#include "IO1.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
void task2();
void task3();
void task1()
{	
		int i;
		ledcc_PutVal(0x08);
		for( i=0;i<0x7ffff;i++);
		ledcc_PutVal(0x4);
		for( i=0;i<0x7ffff;i++);
		ledcc_PutVal(0x00);
		printf("entering to to the task1 \n");
		for(i=0;i<0x7ffff;i++);
		printf("exiting the task1 and entering to task2\n");
		for(i=0;i<0x7ffff;i++);
		printf("task2 created\n");
		for(i=0;i<0x7ffff;i++);
		xTaskCreate(task2,"deekshitha",100,NULL,11,NULL);
		fflush(stdout);


}

void task2()
{
	int i;
	cc_PutVal(0x1);
	for(i=0;i<0x7ffff;i++);
	cc_PutVal(0x00);
	for(i=0;i<0x7ffff;i++);
	cc_PutVal(0x1);
	for(i=0;i<0x7ffff;i++);
	cc_PutVal(0x00);
	for(i=0;i<0x7ffff;i++);
		
	ledcc_PutVal(0x2);
	for( i=0;i<0x7ffff;i++);
	ledcc_PutVal(0x1);
	for(i=0;i<0x7ffff;i++);
	ledcc_PutVal(0x00);
	
	printf("exiting the task2 and entering to task3\n");
	for(i=0;i<0x7ffff;i++);
	printf("task3 created\n");
	xTaskCreate(task3,"task",100,NULL,12,NULL);
	fflush(stdout);

}

void task3()
{

				int i,j=0x7f,k;
				for(k=0;k<8;k++)
				{
				ca_PutVal(j^0xff);
				for(i=0;i<0x7ffff;i++);
				j=j>>1;
				}
				
				
				cc_PutVal(0x1);
				for(i=0;i<0x7ffff;i++);
				cc_PutVal(0x00);
				for(i=0;i<0x7ffff;i++);
				cc_PutVal(0x1);
				for(i=0;i<0x7ffff;i++);
				cc_PutVal(0x00);
				for(i=0;i<0x7ffff;i++);
					
					
				ledca_PutVal(0x7);
				for(i=0;i<0x7ffff;i++);
				ledca_PutVal(0xb);
				for(i=0;i<0x7ffff;i++);
				ledca_PutVal(0xff);		
				
				
				printf("exiting the task3 and completed\n");
				vTaskDelay(500/portTICK_PERIOD_MS);
}

/* User includes (#include below this line is not maintained by Processor Expert) */

/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
  /* Write your local variable definition here */
	
  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */
  /* For example: for(;;) { } */
xTaskCreate(task1,"shreyas",100,NULL,10,NULL);
printf("task1 created\n");
fflush(stdout);
//xTaskCreate(task2,"deekshitha",100,NULL,16,NULL);
//xTaskCreate(task3,"task",100,NULL,16,NULL);
  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END ProcessorExpert */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
